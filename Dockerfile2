# $DEL_BEGIN

# ####### ðŸ‘‡ SIMPLE SOLUTION (x86 and M1) ðŸ‘‡ ########
# FROM python:3.8.12-buster

# WORKDIR /prod

# COPY requirements_old.txt requirements_old.txt
# RUN pip install -r requirements_old.txt

# COPY taxifare taxifare
# COPY setup.py setup.py
# RUN pip install .

# COPY Makefile Makefile
# RUN make reset_local_files

# CMD uvicorn taxifare.api.fast:app --host 0.0.0.0 --port $PORT

####### ðŸ‘‡ OPTIMIZED SOLUTION (x86)ðŸ‘‡ #######

# tensorflow base-images are optimized: lighter than python-buster + pip install tensorflow
FROM tensorflow/tensorflow:latest
# OR for apple silicon, use this base image instead
#FROM armswdev/tensorflow-arm-neoverse:latest


WORKDIR /prod

ENV PORT=8000

# We strip the requirements from useless packages like `ipykernel`, `matplotlib` etc...
#COPY requirements_old.txt requirements_old.txt
#RUN pip install -r requirements_old.txt
#USER dockuser
COPY aitrading aitrading
COPY setup.py setup.py
COPY aitrading/models aitrading/models


#COPY peotry.lock poetry.lock
COPY pyproject.toml poetry.lock ./
RUN touch README.md
COPY Makefile Makefile

RUN pip install poetry==1.4.2

ENV POETRY_NO_INTERACTION=1 \
    POETRY_VIRTUALENVS_IN_PROJECT=1 \
    POETRY_VIRTUALENVS_CREATE=1 \
    POETRY_CACHE_DIR=/tmp/poetry_cache

RUN poetry install --without dev
RUN pip install uvicorn
RUN pip install pandas


#RUN make reset_local_files

#CMD uvicorn aitrading.api.main:app --host 0.0.0.0 --port $PORT
#CMD make run_fast_api
# $DEL_END
